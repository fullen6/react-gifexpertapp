{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgories","type","value","onChange","target","propType","setCategorias","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,GAC7BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAmBO,SAMtC,2BACAC,KAAK,OACLC,MAAOT,EACPU,SAhBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAmB/BZ,EAAYe,SAAW,CACnBC,c,OAAeC,EAAUC,KAAKC,Y,2BC1BpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QATf,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAX,GACfS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAKtB,CAACpB,IAEGqB,EDfwBI,CAAazB,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,4CAA4ChB,GACzDoB,GAAS,uBAAGJ,UAAU,oCAAb,WACV,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAACiB,GAAD,OACP,kBAAC,EAAD,eACIC,IAAKD,EAAMf,IACPe,UEdnBE,EAAe,WAAO,IAAD,EAEM/C,mBAAS,CAAC,cAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAI9B,OACI,6BACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEQiD,EAAWpB,KAAI,SAACT,GAAD,OACX,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCbtC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.89a93cf0.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue]= useState('');\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (inputValue.trim().length>2){\n        setCategories(catgories => [inputValue,...catgories]);\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}/>\n        </form>\n    )\n}\nAddCategory.propType = {\n    setCategorias: PropTypes.func.isRequired\n}\n\n\n\n","export  const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=oCkxGJbM6TmrWK0w1Wgw7J3SeaN3IEWY`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized.url\n        }\n    });\n    return gifs;\n}\n","import React from 'react';\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src={url} alt={title}/>\n           <p>{title}</p>\n        </div>\n    );\n};\n\n\n","import React from \"react\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport {GifGridItem} from \"./GifGridItem\";\n\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInDownBig\">{category}</h3>\n            {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map((image) => (\n                        <GifGridItem\n                            key={image.id}\n                            {...image}/>))\n                }\n            </div>\n        </>\n    );\n}\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(images => {\n                setState({\n                    data: images,\n                    loading: false\n                })\n            }\n        )\n\n    }, [category]);\n\n    return state;\n};\n\n\n","import React ,{useState}from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport {GifGrid} from \"./components/GifGrid\";\n\nexport const GitExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <div>\n            <h2>GitExpertApp</h2>    \n            <hr/>  \n            <AddCategory setCategories={setCategories} />\n            <ol>\n                {\n                    categories.map((category) =>  (\n                        <GifGrid\n                            key={category}\n                            category={category}/>\n                        )\n                    )\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}